<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 	
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "MemberMapper">
	<sql id="memberColumns">
		MEMBER_NUM, MEMBER_NAME, MEMBER_ID, MEMBER_PW, MEMBER_ADDR, MEMBER_ADDR_DETAIL
		, MEMBER_POST, MEMBER_REGIST, GENDER, MEMBER_PHONE, MEMBER_EMAIL, MEMBER_BIRTH
		, MEMBER_POINT
	</sql>
	<insert id="memberInsert" parameterType="member">
		insert into members( <include refid="memberColumns"/> )
		values (#{memberNum}, #{memberName}, #{memberId}, #{memberPw}, #{memberAddr}
				, #{memberAddrDetail}, #{memberPost}, sysdate, #{gender}, #{memberPhone}
				, #{memberEmail}, #{memberBirth}, 0)
	</insert>
	
	<select id="memberAllSelect" parameterType="startEndPageDTO" resultType="member">
		select * from (
			select row_number() over (order by member_num) as rn,
				<include refid="memberColumns"/>
			from members
			<where>
				<if test="searchWord != null">
					member_name like '%' || #{searchWord} || '%'
					or member_num like '%' || #{searchWord} || '%'
				</if>
			</where>
		)
		where rn between #{startRow} and #{endRow}
	</select>
	
	<select id="memberCount" parameterType="string" resultType="integer">
		select count(*) from members
		<if test='searchWord != null'>
			<where>
				member_name like '%' || #{searchWord} || '%'
				or member_num like '%' || #{searchWord} || '%'
			</where>
		</if>
	</select>
	
	<select id="memberOneSelect" parameterType="string" resultType="member">
		select <include refid="memberColumns"/> from members
		where member_num = #{memberNum}
	</select>
	
	<update id="memberUpdate" parameterType="member">
		update members
		set MEMBER_NAME = #{memberName},
			MEMBER_ID = #{memberId},
			MEMBER_ADDR = #{memberAddr},
			MEMBER_ADDR_DETAIL = #{memberAddrDetail},
			MEMBER_POST = #{memberPost},
			MEMBER_PHONE = #{memberPhone},
			MEMBER_EMAIL = #{memberEmail}
		where member_num = #{memberNum}
	</update>
	
	<delete id="memberDelete" parameterType="string">
		delete from members where member_num = #{memberNum}
	</delete>
</mapper>